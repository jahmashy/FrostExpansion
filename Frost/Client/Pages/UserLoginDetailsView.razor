@page "/account/settings/login"
@using System.Security.Claims;
@using System.Globalization;
@layout UserAccountLayout
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
<AuthorizeView>
    <Authorized>
        <LoginDetailsForm model="model"></LoginDetailsForm>
    </Authorized>
    <NotAuthorized>
        @{
            navManager.NavigateTo("/login");
        }
    </NotAuthorized>
</AuthorizeView>
@code {
    [CascadingParameter]
    public UserAccountLayout layout { get; set; }
    public ChangeLoginDetailsModel model { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        layout.ChangeHeader("LoginDetailsUser");
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        var authState = await customAuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userEmail = user.Claims.Where(c => c.Type == ClaimTypes.Email).First().Value;
        var userTelNumber = user.Claims.Where(c => c.Type == ClaimTypes.MobilePhone).First().Value;
        model = new()
        {
            email = userEmail,
            telNumber = int.Parse(userTelNumber)
        };
    }
}
