@using Frost.Shared.Models;
@inject IStringLocalizer<Resource> localizer
@inject IJSRuntime JS
<div class="propertyListElement-div">
    <div class="image-slider">
        @foreach (var url in propertyOffer.property.propertyImagesUrls)
        {
            <div class="slide">
                <img src="@url"/>
            </div>
        }
    </div>
    <div class="propertyContent-div">
        <h3>@propertyOffer.title</h3>
        <span>@propertyOffer.property.location.cityName, @propertyOffer.property.location.sublocalityName</span>
        <p><span>@propertyOffer.price zł / mc </span>@propertyOffer.property.surface m²</p>
        <p class="description">@propertyOffer.description</p>
        <div class="bottomContent">
            <span><img src="images/Icons/Tick.png" style="visibility: @(propertyOffer.roommates ? "visible" : "hidden")" />@(propertyOffer.roommates ? localizer["Roommates"] : "")</span>
            <button>@localizer["SendMessage"]</button>
            <img class="addFavourite-button" />
        </div>
    </div>

</div>

@code {
    [Parameter]
    public PropertyOffer? propertyOffer { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("import", "/js/InitializeSlickCarousel.js");
            await JS.InvokeVoidAsync("initializeSlickCarousel");
        }
    }
}
